SOLID의 원칙이 Sorter에서 어떻게 사용되었는가?
-단일 책임 원칙: Sorter은 배열을 정렬하는 하나의 책임만을 갖는다.
-개방-폐쇄 원칙: 추상화 할수 있는 것들을 최대한 추상화하여 변경되지않고 고정된 부분들은 슈퍼클래스로 다 올리고, 다형성을 위한 부분만 자녀메소드로 넘겨준다.
-리스코프치환원칙: 프로그램에서 다형성은 갖지만 부모와 자식 클래스 모두 정렬하는 기능만은 수행하는 일괄된 역할을 한다.
-의존역전원칙: 프로그램의 핵심이 되는 작업들은 부모클래스에 의존하여 수행하도록 하고, 각 하위클래스들은 특징적인 역할을 수행한다.
-인터페이스 분리 원칙: 다형성을 위해 코드들을 수정하는 것이 아닌, 추상화 하여 부모클래스는 기본 틀을 제공하게 하고, 클라이언트에서 수행하는 기능들은 하위클래스들의 다형성을 위해 분리시킨다.